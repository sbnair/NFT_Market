{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/NFT_Market/src/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\nimport { awaitTransactionSignatureConfirmation, getCandyMachineState, mintOneToken, shortenAddress } from \"./test_script\";\nimport Skeleton from \"./logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConnectButton = styled(WalletDialogButton)``;\n_c = ConnectButton;\nconst CounterText = styled.span``; // add your styles here\n\n_c2 = CounterText;\nconst MintContainer = styled.div``; // add your styles here\n\n_c3 = MintContainer;\nconst MintButton = styled(Button)``; // add your styles here\n\n_c4 = MintButton;\nconst indexes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst items = [{\n  name: '1'\n}, {\n  name: '2'\n}, {\n  name: '3'\n}, {\n  name: '4'\n}, {\n  name: '5'\n}, {\n  name: '6'\n}, {\n  name: '7'\n}, {\n  name: '8'\n}, {\n  name: '9'\n}, {\n  name: '10'\n}, {\n  name: '11'\n}, {\n  name: '12'\n}];\nconst myItems = [{\n  name: '11'\n}, {\n  name: '12'\n}];\n\nconst Home = props => {\n  _s();\n\n  const [curPage, setCurPage] = useState(0);\n  const [curItems, setCurItems] = useState(items);\n  const [balance, setBalance] = useState();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: \"\",\n    severity: undefined\n  });\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState();\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed\n      } = await getCandyMachineState(wallet, props.candyMachineId, props.connection);\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n\n      if (wallet && (candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.program)) {\n        const mintTxId = await mintOneToken(candyMachine, props.config, wallet.publicKey, props.treasury);\n        const status = await awaitTransactionSignatureConfirmation(mintTxId, props.txTimeout, props.connection, \"singleGossip\", false);\n\n        if (!(status === null || status === void 0 ? void 0 : status.err)) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\"\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\"\n          });\n        }\n      }\n    } catch (error) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {} else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\"\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n\n      setIsMinting(false);\n      refreshCandyMachineState();\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      } else {\n        setCurItems(curItems);\n        setCurPage(0);\n      }\n    })();\n  }, [wallet, props.connection]);\n  useEffect(refreshCandyMachineState, [wallet, props.candyMachineId, props.connection]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        minHeight: 100\n      },\n      children: [wallet && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          width: 80,\n          cursor: 'pointer',\n          margin: 20\n        },\n        onClick: () => {\n          setCurPage(0);\n          setCurItems(items);\n        },\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 20\n      }, this), wallet && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          width: 80,\n          cursor: 'pointer',\n          margin: 20\n        },\n        onClick: () => {\n          setCurPage(1);\n          setCurItems(myItems);\n        },\n        children: \"My heroes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), wallet && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Available: \", itemsAvailable]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Redeemed: \", itemsRedeemed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Remaining: \", itemsRemaining]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wallet \", shortenAddress(wallet.publicKey.toBase58() || \"\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", (balance || 0).toLocaleString(), \" SOL\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MintContainer, {\n      children: !wallet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ConnectButton, {\n          style: {\n            position: 'absolute',\n            right: 0,\n            top: 0\n          },\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n            maxWidth: 1100\n          },\n          children: indexes.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'flex-start',\n              width: 200,\n              margin: 30\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative',\n                backgroundColor: 'rgba(50, 50, 0, 0.5)'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: 'back' + idx,\n                src: Skeleton,\n                width: 200,\n                height: 200,\n                style: {\n                  backgroundColor: 'rgba(50, 50, 0, 0.5)',\n                  zIndex: -1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MintButton, {\n              disabled: true,\n              onClick: onMint,\n              variant: \"contained\",\n              children: \"MINT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          maxWidth: 1100\n        },\n        children: curItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n            width: 200,\n            margin: 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              backgroundColor: 'rgba(50, 50, 0, 0.5)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: '' + idx,\n              src: \"https://placeimg.com/200/200/\" + idx,\n              style: {\n                minWidth: 200,\n                minHeight: 200,\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: 'back' + idx,\n              src: Skeleton,\n              width: 200,\n              height: 200,\n              style: {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                backgroundColor: 'rgba(50, 50, 0, 0.5)',\n                zIndex: -1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MintButton, {\n            disabled: isSoldOut || isMinting || !isActive,\n            onClick: onMint,\n            variant: \"contained\",\n            children: isSoldOut ? \"SOLD OUT\" : isActive ? isMinting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 21\n            }, this) : \"MINT\" : /*#__PURE__*/_jsxDEV(Countdown, {\n              date: startDate,\n              onMount: ({\n                completed\n              }) => completed && setIsActive(true),\n              onComplete: () => setIsActive(true),\n              renderer: renderCounter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alertState.open,\n      autoHideDuration: 6000,\n      onClose: () => setAlertState({ ...alertState,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setAlertState({ ...alertState,\n          open: false\n        }),\n        severity: alertState.severity,\n        children: alertState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"2j55a6PD7lv7Yhpqx6vdjTZdwWg=\", false, function () {\n  return [useAnchorWallet];\n});\n\n_c5 = Home;\n\nconst renderCounter = ({\n  days,\n  hours,\n  minutes,\n  seconds,\n  completed\n}) => {\n  return /*#__PURE__*/_jsxDEV(CounterText, {\n    children: [hours + (days || 0) * 24, \" hours, \", minutes, \" minutes, \", seconds, \" seconds\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ConnectButton\");\n$RefreshReg$(_c2, \"CounterText\");\n$RefreshReg$(_c3, \"MintContainer\");\n$RefreshReg$(_c4, \"MintButton\");\n$RefreshReg$(_c5, \"Home\");","map":{"version":3,"sources":["/home/ubuntu/NFT_Market/src/Home.tsx"],"names":["useEffect","useState","styled","Countdown","Button","CircularProgress","Snackbar","Alert","LAMPORTS_PER_SOL","useAnchorWallet","WalletDialogButton","awaitTransactionSignatureConfirmation","getCandyMachineState","mintOneToken","shortenAddress","ConnectButton","CounterText","span","MintContainer","div","MintButton","indexes","items","name","myItems","Home","props","curPage","setCurPage","curItems","setCurItems","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","itemsAvailable","setItemsAvailable","itemsRedeemed","setItemsRedeemed","itemsRemaining","setItemsRemaining","alertState","setAlertState","open","message","severity","undefined","startDate","setStartDate","Date","wallet","candyMachine","setCandyMachine","refreshCandyMachineState","goLiveDate","candyMachineId","connection","onMint","program","mintTxId","config","publicKey","treasury","status","txTimeout","err","error","msg","indexOf","code","getBalance","position","width","display","flexDirection","justifyContent","minHeight","cursor","margin","toBase58","toLocaleString","right","top","flexWrap","maxWidth","map","item","idx","backgroundColor","Skeleton","zIndex","minWidth","left","completed","renderCounter","days","hours","minutes","seconds"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,MAAT,EAAiBC,gBAAjB,EAAmCC,QAAnC,QAAmD,mBAAnD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAIA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,kBAAT,QAAmC,oCAAnC;AAEA,SAEEC,qCAFF,EAGEC,oBAHF,EAIEC,YAJF,EAKEC,cALF,QAMO,eANP;;;;AAWA,MAAMC,aAAa,GAAGb,MAAM,CAACQ,kBAAD,CAAqB,EAAjD;KAAMK,a;AAEN,MAAMC,WAAW,GAAGd,MAAM,CAACe,IAAK,EAAhC,C,CAAmC;;MAA7BD,W;AAEN,MAAME,aAAa,GAAGhB,MAAM,CAACiB,GAAI,EAAjC,C,CAAoC;;MAA9BD,a;AAEN,MAAME,UAAU,GAAGlB,MAAM,CAACE,MAAD,CAAS,EAAlC,C,CAAqC;;MAA/BgB,U;AAeN,MAAMC,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CAAhB;AAEA,MAAMC,KAAK,GAAG,CACZ;AAACC,EAAAA,IAAI,EAAE;AAAP,CADY,EAEZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CAFY,EAGZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CAHY,EAIZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CAJY,EAKZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CALY,EAMZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CANY,EAOZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CAPY,EAQZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CARY,EASZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CATY,EAUZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CAVY,EAWZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CAXY,EAYZ;AAACA,EAAAA,IAAI,EAAE;AAAP,CAZY,CAAd;AAcA,MAAMC,OAAO,GAAG,CACd;AAACD,EAAAA,IAAI,EAAE;AAAP,CADc,EAEd;AAACA,EAAAA,IAAI,EAAE;AAAP,CAFc,CAAhB;;AAKA,MAAME,IAAI,GAAIC,KAAD,IAAsB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAYqB,KAAZ,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,EAAtC;AACA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,KAAD,CAAxC,CAJiC,CAIgB;;AACjD,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAC,KAAD,CAA1C,CALiC,CAKkB;;AACnD,QAAM,CAACoC,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,CAAC,KAAD,CAA1C,CANiC,CAMkB;;AAEnD,QAAM,CAACsC,cAAD,EAAiBC,iBAAjB,IAAsCvC,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACwC,aAAD,EAAgBC,gBAAhB,IAAoCzC,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAAC0C,cAAD,EAAiBC,iBAAjB,IAAsC3C,QAAQ,CAAC,CAAD,CAApD;AAEA,QAAM,CAAC4C,UAAD,EAAaC,aAAb,IAA8B7C,QAAQ,CAAa;AACvD8C,IAAAA,IAAI,EAAE,KADiD;AAEvDC,IAAAA,OAAO,EAAE,EAF8C;AAGvDC,IAAAA,QAAQ,EAAEC;AAH6C,GAAb,CAA5C;AAMA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnD,QAAQ,CAAC,IAAIoD,IAAJ,CAAS3B,KAAK,CAACyB,SAAf,CAAD,CAA1C;AAEA,QAAMG,MAAM,GAAG7C,eAAe,EAA9B;AACA,QAAM,CAAC8C,YAAD,EAAeC,eAAf,IAAkCvD,QAAQ,EAAhD;;AAEA,QAAMwD,wBAAwB,GAAG,MAAM;AACrC,KAAC,YAAY;AACX,UAAI,CAACH,MAAL,EAAa;AAEb,YAAM;AACJC,QAAAA,YADI;AAEJG,QAAAA,UAFI;AAGJnB,QAAAA,cAHI;AAIJI,QAAAA,cAJI;AAKJF,QAAAA;AALI,UAMF,MAAM7B,oBAAoB,CAC5B0C,MAD4B,EAE5B5B,KAAK,CAACiC,cAFsB,EAG5BjC,KAAK,CAACkC,UAHsB,CAN9B;AAYApB,MAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACAK,MAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACAD,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AAEAL,MAAAA,YAAY,CAACO,cAAc,KAAK,CAApB,CAAZ;AACAS,MAAAA,YAAY,CAACM,UAAD,CAAZ;AACAF,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD,KAtBD;AAuBD,GAxBD;;AA0BA,QAAMM,MAAM,GAAG,YAAY;AACzB,QAAI;AACFvB,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAIgB,MAAM,KAAIC,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAEO,OAAlB,CAAV,EAAqC;AACnC,cAAMC,QAAQ,GAAG,MAAMlD,YAAY,CACjC0C,YADiC,EAEjC7B,KAAK,CAACsC,MAF2B,EAGjCV,MAAM,CAACW,SAH0B,EAIjCvC,KAAK,CAACwC,QAJ2B,CAAnC;AAOA,cAAMC,MAAM,GAAG,MAAMxD,qCAAqC,CACxDoD,QADwD,EAExDrC,KAAK,CAAC0C,SAFkD,EAGxD1C,KAAK,CAACkC,UAHkD,EAIxD,cAJwD,EAKxD,KALwD,CAA1D;;AAQA,YAAI,EAACO,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,GAAT,CAAJ,EAAkB;AAChBvB,UAAAA,aAAa,CAAC;AACZC,YAAAA,IAAI,EAAE,IADM;AAEZC,YAAAA,OAAO,EAAE,kCAFG;AAGZC,YAAAA,QAAQ,EAAE;AAHE,WAAD,CAAb;AAKD,SAND,MAMO;AACLH,UAAAA,aAAa,CAAC;AACZC,YAAAA,IAAI,EAAE,IADM;AAEZC,YAAAA,OAAO,EAAE,gCAFG;AAGZC,YAAAA,QAAQ,EAAE;AAHE,WAAD,CAAb;AAKD;AACF;AACF,KAhCD,CAgCE,OAAOqB,KAAP,EAAmB;AACnB;AACA,UAAItB,OAAO,GAAGsB,KAAK,CAACC,GAAN,IAAa,mCAA3B;;AACA,UAAI,CAACD,KAAK,CAACC,GAAX,EAAgB;AACd,YAAID,KAAK,CAACtB,OAAN,CAAcwB,OAAd,CAAsB,OAAtB,CAAJ,EAAoC,CACnC,CADD,MACO,IAAIF,KAAK,CAACtB,OAAN,CAAcwB,OAAd,CAAsB,OAAtB,CAAJ,EAAoC;AACzCxB,UAAAA,OAAO,GAAI,WAAX;AACD,SAFM,MAEA,IAAIsB,KAAK,CAACtB,OAAN,CAAcwB,OAAd,CAAsB,OAAtB,CAAJ,EAAoC;AACzCxB,UAAAA,OAAO,GAAI,sDAAX;AACD;AACF,OAPD,MAOO;AACL,YAAIsB,KAAK,CAACG,IAAN,KAAe,GAAnB,EAAwB;AACtBzB,UAAAA,OAAO,GAAI,WAAX;AACAZ,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,SAHD,MAGO,IAAIkC,KAAK,CAACG,IAAN,KAAe,GAAnB,EAAwB;AAC7BzB,UAAAA,OAAO,GAAI,oCAAX;AACD;AACF;;AAEDF,MAAAA,aAAa,CAAC;AACZC,QAAAA,IAAI,EAAE,IADM;AAEZC,QAAAA,OAFY;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAD,CAAb;AAKD,KAxDD,SAwDU;AACR,UAAIK,MAAJ,EAAY;AACV,cAAMvB,OAAO,GAAG,MAAML,KAAK,CAACkC,UAAN,CAAiBc,UAAjB,CAA4BpB,MAAM,CAACW,SAAnC,CAAtB;AACAjC,QAAAA,UAAU,CAACD,OAAO,GAAGvB,gBAAX,CAAV;AACD;;AACD8B,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAmB,MAAAA,wBAAwB;AACzB;AACF,GAjED;;AAmEAzD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAIsD,MAAJ,EAAY;AACV,cAAMvB,OAAO,GAAG,MAAML,KAAK,CAACkC,UAAN,CAAiBc,UAAjB,CAA4BpB,MAAM,CAACW,SAAnC,CAAtB;AACAjC,QAAAA,UAAU,CAACD,OAAO,GAAGvB,gBAAX,CAAV;AACD,OAHD,MAGO;AACLsB,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAD,QAAAA,UAAU,CAAC,CAAD,CAAV;AACD;AACF,KARD;AASD,GAVQ,EAUN,CAAC0B,MAAD,EAAS5B,KAAK,CAACkC,UAAf,CAVM,CAAT;AAYA5D,EAAAA,SAAS,CAACyD,wBAAD,EAA2B,CAClCH,MADkC,EAElC5B,KAAK,CAACiC,cAF4B,EAGlCjC,KAAK,CAACkC,UAH4B,CAA3B,CAAT;AAMA,sBACE;AAAM,IAAA,KAAK,EAAE;AAACe,MAAAA,QAAQ,EAAE;AAAX,KAAb;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AACVC,QAAAA,KAAK,EAAE,MADG;AAEVC,QAAAA,OAAO,EAAE,MAFC;AAGVC,QAAAA,aAAa,EAAE,KAHL;AAIVC,QAAAA,cAAc,EAAE,QAJN;AAKVC,QAAAA,SAAS,EAAE;AALD,OAAZ;AAAA,iBAQG1B,MAAM,iBAAI;AAAM,QAAA,KAAK,EAAE;AAACsB,UAAAA,KAAK,EAAE,EAAR;AAAYK,UAAAA,MAAM,EAAE,SAApB;AAA+BC,UAAAA,MAAM,EAAE;AAAvC,SAAb;AAAyD,QAAA,OAAO,EAAE,MAAM;AACjFtD,UAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,UAAAA,WAAW,CAACR,KAAD,CAAX;AACD,SAHU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARb,EAYGgC,MAAM,iBAAI;AAAM,QAAA,KAAK,EAAE;AAACsB,UAAAA,KAAK,EAAE,EAAR;AAAYK,UAAAA,MAAM,EAAE,SAApB;AAA+BC,UAAAA,MAAM,EAAE;AAAvC,SAAb;AAAyD,QAAA,OAAO,EAAE,MAAM;AACjFtD,UAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,UAAAA,WAAW,CAACN,OAAD,CAAX;AACD,SAHU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZb;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAkBG8B,MAAM,iBACL;AAAK,MAAA,KAAK,EAAE;AAACsB,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,OAAO,EAAE,MAAzB;AAAiCC,QAAAA,aAAa,EAAE,KAAhD;AAAuDC,QAAAA,cAAc,EAAE;AAAvE,OAAZ;AAAA,8BACE;AAAA,gCACE;AAAA,0CAAqBxC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,mCAAcE,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oCAAeE,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,gCACE;AAAA,gCAAW7B,cAAc,CAACwC,MAAM,CAACW,SAAP,CAAiBkB,QAAjB,MAA+B,EAAhC,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCAAa,CAACpD,OAAO,IAAI,CAAZ,EAAeqD,cAAf,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAgCE,QAAC,aAAD;AAAA,gBACG,CAAC9B,MAAD,gBACC;AAAA,gCACA,QAAC,aAAD;AAAe,UAAA,KAAK,EAAE;AAACqB,YAAAA,QAAQ,EAAE,UAAX;AAAuBU,YAAAA,KAAK,EAAE,CAA9B;AAAiCC,YAAAA,GAAG,EAAE;AAAtC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,KAAK,EAAE;AACVV,YAAAA,KAAK,EAAE,MADG;AAEVC,YAAAA,OAAO,EAAE,MAFC;AAGVC,YAAAA,aAAa,EAAE,KAHL;AAIVS,YAAAA,QAAQ,EAAE,MAJA;AAKVR,YAAAA,cAAc,EAAE,QALN;AAMVS,YAAAA,QAAQ,EAAE;AANA,WAAZ;AAAA,oBAQInE,OAAO,CAACoE,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,kBACZ;AAAK,YAAA,KAAK,EAAE;AACVd,cAAAA,OAAO,EAAE,MADC;AAEVC,cAAAA,aAAa,EAAE,QAFL;AAGVC,cAAAA,cAAc,EAAE,YAHN;AAIVH,cAAAA,KAAK,EAAE,GAJG;AAKVM,cAAAA,MAAM,EAAE;AALE,aAAZ;AAAA,oCAOE;AACE,cAAA,KAAK,EAAE;AACLP,gBAAAA,QAAQ,EAAE,UADL;AAELiB,gBAAAA,eAAe,EAAE;AAFZ,eADT;AAAA,qCAME;AACE,gBAAA,GAAG,EAAE,SAASD,GADhB;AAEE,gBAAA,GAAG,EAAEE,QAFP;AAGE,gBAAA,KAAK,EAAE,GAHT;AAIE,gBAAA,MAAM,EAAE,GAJV;AAKE,gBAAA,KAAK,EAAE;AACLD,kBAAAA,eAAe,EAAE,sBADZ;AAELE,kBAAAA,MAAM,EAAE,CAAC;AAFJ;AALT;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,oBAPF,eAwBE,QAAC,UAAD;AACE,cAAA,QAAQ,EAAE,IADZ;AAEE,cAAA,OAAO,EAAEjC,MAFX;AAGE,cAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA;AARJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA,sBADD,gBAgDD;AAAK,QAAA,KAAK,EAAE;AACVe,UAAAA,KAAK,EAAE,MADG;AAEVC,UAAAA,OAAO,EAAE,MAFC;AAGVC,UAAAA,aAAa,EAAE,KAHL;AAIVS,UAAAA,QAAQ,EAAE,MAJA;AAKVR,UAAAA,cAAc,EAAE,QALN;AAMVS,UAAAA,QAAQ,EAAE;AANA,SAAZ;AAAA,kBASG3D,QAAQ,CAAC4D,GAAT,CAAa,CAACC,IAAD,EAAOC,GAAP,kBACZ;AAAK,UAAA,KAAK,EAAE;AACVd,YAAAA,OAAO,EAAE,MADC;AAEVC,YAAAA,aAAa,EAAE,QAFL;AAGVC,YAAAA,cAAc,EAAE,YAHN;AAIVH,YAAAA,KAAK,EAAE,GAJG;AAKVM,YAAAA,MAAM,EAAE;AALE,WAAZ;AAAA,kCAOE;AACE,YAAA,KAAK,EAAE;AACLP,cAAAA,QAAQ,EAAE,UADL;AAELiB,cAAAA,eAAe,EAAE;AAFZ,aADT;AAAA,oCAME;AACE,cAAA,GAAG,EAAE,KAAKD,GADZ;AAEE,cAAA,GAAG,EAAE,kCAAgCA,GAFvC;AAGE,cAAA,KAAK,EAAE;AACLI,gBAAAA,QAAQ,EAAE,GADL;AAELf,gBAAAA,SAAS,EAAE,GAFN;AAGLc,gBAAAA,MAAM,EAAE;AAHH;AAHT;AAAA;AAAA;AAAA;AAAA,oBANF,eAeE;AACE,cAAA,GAAG,EAAE,SAASH,GADhB;AAEE,cAAA,GAAG,EAAEE,QAFP;AAGE,cAAA,KAAK,EAAE,GAHT;AAIE,cAAA,MAAM,EAAE,GAJV;AAKE,cAAA,KAAK,EAAE;AACLlB,gBAAAA,QAAQ,EAAE,UADL;AAELW,gBAAAA,GAAG,EAAE,CAFA;AAGLU,gBAAAA,IAAI,EAAE,CAHD;AAILJ,gBAAAA,eAAe,EAAE,sBAJZ;AAKLE,gBAAAA,MAAM,EAAE,CAAC;AALJ;AALT;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAoCE,QAAC,UAAD;AACE,YAAA,QAAQ,EAAE3D,SAAS,IAAIE,SAAb,IAA0B,CAACJ,QADvC;AAEE,YAAA,OAAO,EAAE4B,MAFX;AAGE,YAAA,OAAO,EAAC,WAHV;AAAA,sBAKG1B,SAAS,GACR,UADQ,GAENF,QAAQ,GACVI,SAAS,gBACP,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,oBADO,GAGP,MAJQ,gBAOV,QAAC,SAAD;AACE,cAAA,IAAI,EAAEc,SADR;AAEE,cAAA,OAAO,EAAE,CAAC;AAAE8C,gBAAAA;AAAF,eAAD,KAAmBA,SAAS,IAAI/D,WAAW,CAAC,IAAD,CAFtD;AAGE,cAAA,UAAU,EAAE,MAAMA,WAAW,CAAC,IAAD,CAH/B;AAIE,cAAA,QAAQ,EAAEgE;AAJZ;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,kBApCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AATH;AAAA;AAAA;AAAA;AAAA;AAjDF;AAAA;AAAA;AAAA;AAAA,YAhCF,eA2JE,QAAC,QAAD;AACE,MAAA,IAAI,EAAErD,UAAU,CAACE,IADnB;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,OAAO,EAAE,MAAMD,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBE,QAAAA,IAAI,EAAE;AAAvB,OAAD,CAH9B;AAAA,6BAKE,QAAC,KAAD;AACE,QAAA,OAAO,EAAE,MAAMD,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBE,UAAAA,IAAI,EAAE;AAAvB,SAAD,CAD9B;AAEE,QAAA,QAAQ,EAAEF,UAAU,CAACI,QAFvB;AAAA,kBAIGJ,UAAU,CAACG;AAJd;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YA3JF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0KD,CAhTD;;GAAMvB,I;UAoBWhB,e;;;MApBXgB,I;;AAwTN,MAAMyE,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,OAAxB;AAAiCL,EAAAA;AAAjC,CAAD,KAAuD;AAC3E,sBACE,QAAC,WAAD;AAAA,eACGG,KAAK,GAAG,CAACD,IAAI,IAAI,CAAT,IAAc,EADzB,cACqCE,OADrC,gBACwDC,OADxD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,eAAe7E,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./test_script\";\n\nimport Skeleton from './logo.svg';\nimport { randomBytes } from \"crypto\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\ninterface NFTItem {\n  name: string;\n}\n\nconst indexes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nconst items = [\n  {name: '1'},\n  {name: '2'},\n  {name: '3'},\n  {name: '4'},\n  {name: '5'},\n  {name: '6'},\n  {name: '7'},\n  {name: '8'},\n  {name: '9'},\n  {name: '10'},\n  {name: '11'},\n  {name: '12'},\n];\nconst myItems = [\n  {name: '11'},\n  {name: '12'},\n];\n\nconst Home = (props: HomeProps) => {\n  const [curPage, setCurPage] = useState(0);\n  const [curItems, setCurItems] = useState<NFTItem[]>(items);\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n      refreshCandyMachineState();\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      } else {\n        setCurItems(curItems);\n        setCurPage(0);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n  return (\n    <main style={{position: 'relative'}}>\n      <div style={{\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        minHeight: 100,\n      }}\n      >\n        {wallet && <span style={{width: 80, cursor: 'pointer', margin: 20}} onClick={() => {\n          setCurPage(0);\n          setCurItems(items);\n        }}>Home</span>}\n        {wallet && <span style={{width: 80, cursor: 'pointer', margin: 20}} onClick={() => {\n          setCurPage(1);\n          setCurItems(myItems);\n        }}>My heroes</span>}\n      </div>\n      {wallet && (\n        <div style={{width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n          <div>\n            <p>Total Available: {itemsAvailable}</p>\n            <p>Redeemed: {itemsRedeemed}</p>\n            <p>Remaining: {itemsRemaining}</p>\n          </div>\n          <div>\n            <p>Wallet {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>\n            <p>Balance: {(balance || 0).toLocaleString()} SOL</p>\n          </div>\n        </div>\n      )}\n\n      <MintContainer>\n        {!wallet ? (\n          <>\n          <ConnectButton style={{position: 'absolute', right: 0, top: 0}}>Connect Wallet</ConnectButton>\n          <div style={{\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            justifyContent: 'center',\n            maxWidth: 1100\n          }}>\n            { indexes.map((item, idx) => \n              <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'flex-start',\n                width: 200,\n                margin: 30,\n              }}>\n                <div\n                  style={{\n                    position: 'relative',\n                    backgroundColor: 'rgba(50, 50, 0, 0.5)',\n                  }}\n                  >\n                  <img\n                    alt={'back' + idx}\n                    src={Skeleton}\n                    width={200}\n                    height={200}\n                    style={{\n                      backgroundColor: 'rgba(50, 50, 0, 0.5)',\n                      zIndex: -1,\n                    }}\n                  />\n                </div>\n                <MintButton\n                  disabled={true}\n                  onClick={onMint}\n                  variant=\"contained\"\n                >\n                  MINT\n                </MintButton>\n              </div>\n            )}\n          </div>\n          </>\n        ) : \n        <div style={{\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          maxWidth: 1100\n        }}\n        >\n          {curItems.map((item, idx) => \n            <div style={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'flex-start',\n              width: 200,\n              margin: 30,\n            }}>\n              <div\n                style={{\n                  position: 'relative',\n                  backgroundColor: 'rgba(50, 50, 0, 0.5)',\n                }}\n                >\n                <img\n                  alt={'' + idx}\n                  src={\"https://placeimg.com/200/200/\"+idx}\n                  style={{\n                    minWidth: 200,\n                    minHeight: 200,\n                    zIndex: 1,\n                  }}\n                />\n                <img\n                  alt={'back' + idx}\n                  src={Skeleton}\n                  width={200}\n                  height={200}\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    backgroundColor: 'rgba(50, 50, 0, 0.5)',\n                    zIndex: -1,\n                  }}\n                />\n              </div>\n              <MintButton\n                disabled={isSoldOut || isMinting || !isActive}\n                onClick={onMint}\n                variant=\"contained\"\n              >\n                {isSoldOut ? (\n                  \"SOLD OUT\"\n                ) : isActive ? (\n                  isMinting ? (\n                    <CircularProgress />\n                  ) : (\n                    \"MINT\"\n                  )\n                ) : (\n                  <Countdown\n                    date={startDate}\n                    onMount={({ completed }) => completed && setIsActive(true)}\n                    onComplete={() => setIsActive(true)}\n                    renderer={renderCounter}\n                  />\n                )}\n              </MintButton>\n            </div>\n          )}\n        </div>\n        }\n      </MintContainer>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}